!_TAG_FILE_FORMAT	2	/extended format; --format=1 will not append ;" to lines/
!_TAG_FILE_SORTED	1	/0=unsorted, 1=sorted, 2=foldcase/
!_TAG_PROGRAM_AUTHOR	Darren Hiebert	/dhiebert@users.sourceforge.net/
!_TAG_PROGRAM_NAME	Exuberant Ctags	//
!_TAG_PROGRAM_URL	http://ctags.sourceforge.net	/official site/
!_TAG_PROGRAM_VERSION	5.8	//
ABCD	rtcp/random32.c	/^    uint32_t ABCD[4];$/;"	m	struct:AVMD5	file:
APP	rtcp/rtcp.h	/^	APP= 204$/;"	e	enum:__anon1
AR	Makefile	/^AR = $(CROSS_COMPILE)ar$/;"	m
AS	Makefile	/^AS = $(CROSS_COMPILE)as$/;"	m
AVMD5	rtcp/random32.c	/^typedef struct AVMD5{$/;"	s	file:
AVMD5	rtcp/random32.c	/^} AVMD5;$/;"	t	typeref:struct:AVMD5	file:
BOOL	comm/type.h	/^}BOOL;$/;"	t	typeref:enum:__anon3
BYE	rtcp/rtcp.h	/^	BYE = 203,$/;"	e	enum:__anon1
CC	Makefile	/^CC = $(CROSS_COMPILE)gcc$/;"	m
CFLAGES	Makefile	/^CFLAGES =   -g  -lpthread $/;"	m
CHAR	comm/type.h	/^typedef char 					CHAR;$/;"	t
CNAME	rtcp/rtcp.h	/^	CNAME = 1,$/;"	e	enum:__anon2
CONFIG_COMPILER	Makefile	/^CONFIG_COMPILER=gnu$/;"	m
CORE	rtcp/random32.c	104;"	d	file:
CORE2	rtcp/random32.c	133;"	d	file:
CORE4	rtcp/random32.c	134;"	d	file:
CROSS_COMPILE	Makefile	/^CROSS_COMPILE = $/;"	m
DEFAULT_TTL	rtsp/rtsp.h	37;"	d
DE_TIME	rtp/rtp.h	38;"	d
DOUBLE	comm/type.h	/^typedef double					DOUBLE;$/;"	t
Decode	comm/md5c.c	/^static VOID Decode (output, input, len)$/;"	f	file:
Decode	md5c.c	/^static VOID Decode (output, input, len)$/;"	f	file:
EMAIL	rtcp/rtcp.h	/^	EMAIL,$/;"	e	enum:__anon2
Encode	comm/md5c.c	/^static VOID Encode (output, input, len)$/;"	f	file:
Encode	md5c.c	/^static VOID Encode (output, input, len)$/;"	f	file:
F	comm/md5c.c	68;"	d	file:
F	md5c.c	68;"	d	file:
FAILURE	comm/type.h	51;"	d
FALSE	comm/type.h	/^	FALSE = 0,$/;"	e	enum:__anon3
FF	comm/md5c.c	80;"	d	file:
FF	md5c.c	80;"	d	file:
FLOAT	comm/type.h	/^typedef float 					FLOAT;$/;"	t
FU_A_HEAD_SIZE	rtp/rtp.h	24;"	d
FU_A_INDI_SIZE	rtp/rtp.h	23;"	d
G	comm/md5c.c	69;"	d	file:
G	md5c.c	69;"	d	file:
GG	comm/md5c.c	85;"	d	file:
GG	md5c.c	85;"	d	file:
H	comm/md5c.c	70;"	d	file:
H	md5c.c	70;"	d	file:
HDR_ACCEPT	rtsp/rtsp.h	27;"	d
HDR_CSEQ	rtsp/rtsp.h	38;"	d
HDR_REQUIRE	rtsp/rtsp.h	26;"	d
HDR_SESSION	rtsp/rtsp.h	32;"	d
HDR_TRANSPORT	rtsp/rtsp.h	31;"	d
HH	comm/md5c.c	90;"	d	file:
HH	md5c.c	90;"	d	file:
I	comm/md5c.c	71;"	d	file:
I	md5c.c	71;"	d	file:
II	comm/md5c.c	95;"	d	file:
II	md5c.c	95;"	d	file:
L64	comm/type.h	/^typedef long 					L64;$/;"	t
LD	Makefile	/^LD = $(CROSS_COMPILE)ld$/;"	m
LOC	rtcp/rtcp.h	/^	LOC,$/;"	e	enum:__anon2
MAX_CONN	rtsp/rtsp.h	39;"	d
MAX_DESCR_LENGTH	rtsp/rtsp.h	36;"	d
MD5Final	comm/md5c.c	/^VOID MD5Final (digest, context)$/;"	f
MD5Final	md5c.c	/^VOID MD5Final (digest, context)$/;"	f
MD5Init	comm/md5c.c	/^VOID MD5Init (context)$/;"	f
MD5Init	md5c.c	/^VOID MD5Init (context)$/;"	f
MD5Transform	comm/md5c.c	/^static VOID MD5Transform (state, block)$/;"	f	file:
MD5Transform	md5c.c	/^static VOID MD5Transform (state, block)$/;"	f	file:
MD5Update	comm/md5c.c	/^VOID MD5Update (context, input, inputLen)$/;"	f
MD5Update	md5c.c	/^VOID MD5Update (context, input, inputLen)$/;"	f
MD5_CTX	comm/md5.h	/^} MD5_CTX;$/;"	t	typeref:struct:__anon4
MD5_memcpy	comm/md5c.c	/^static VOID MD5_memcpy (output, input, len)$/;"	f	file:
MD5_memcpy	md5c.c	/^static VOID MD5_memcpy (output, input, len)$/;"	f	file:
MD5_memset	comm/md5c.c	/^static VOID MD5_memset (output, value, len)$/;"	f	file:
MD5_memset	md5c.c	/^static VOID MD5_memset (output, value, len)$/;"	f	file:
MIN	rtp/rtp.h	33;"	d
NALU_HEAD_SIZE	rtp/rtp.h	22;"	d
NALU_INDIC_SIZE	rtp/rtp.h	21;"	d
NAME	rtcp/rtcp.h	/^	NAME,$/;"	e	enum:__anon2
NOTE	rtcp/rtcp.h	/^	NOTE,$/;"	e	enum:__anon2
NTP_time	rtsp/rtsp_describe.c	/^ float NTP_time(time_t t)$/;"	f
NULL	comm/type.h	46;"	d
NULL_PTR	comm/type.h	49;"	d
OBJCOPY	Makefile	/^OBJCOPY = $(CROSS_COMPILE)objcopy$/;"	m
OBJS	Makefile	/^OBJS = rtspd.o .\/net\/socket.o .\/rtcp\/rtcp.o .\/rtp\/rtp_h264.o .\/rtp\/udp.o \\$/;"	m
PACKAGE	rtsp/rtsp.h	28;"	d
PADDING	comm/md5c.c	/^static U8 PADDING[64] = {$/;"	v	file:
PADDING	md5c.c	/^static U8 PADDING[64] = {$/;"	v	file:
PCHAR	comm/type.h	/^typedef char 					PCHAR;$/;"	t
PHONE	rtcp/rtcp.h	/^	PHONE,$/;"	e	enum:__anon2
POINTER	comm/global.h	/^typedef U8 *POINTER;$/;"	t
PRIV	rtcp/rtcp.h	/^	PRIV$/;"	e	enum:__anon2
PROTOTYPES	comm/global.h	12;"	d
PROTO_LIST	comm/global.h	29;"	d
PROTO_LIST	comm/global.h	31;"	d
READ_LEN	rtp/rtp.h	35;"	d
ROTATE_LEFT	comm/md5c.c	75;"	d	file:
ROTATE_LEFT	md5c.c	75;"	d	file:
RR	rtcp/rtcp.h	/^	RR = 201,$/;"	e	enum:__anon1
RTCP_header	rtcp/rtcp.h	/^}RTCP_header;$/;"	t	typeref:struct:_RTCP_header
RTCP_header_BYE	rtcp/rtcp.h	/^}RTCP_header_BYE;$/;"	t	typeref:struct:_RTCP_header_BYE
RTCP_header_RR	rtcp/rtcp.h	/^}RTCP_header_RR;$/;"	t	typeref:struct:_RTCP_header_RR
RTCP_header_SDES	rtcp/rtcp.h	/^}RTCP_header_SDES;$/;"	t	typeref:struct:_RTCP_header_SDES
RTCP_header_SR	rtcp/rtcp.h	/^}RTCP_header_SR;$/;"	t	typeref:struct:_RTCP_header_SR
RTCP_header_SR_report_block	rtcp/rtcp.h	/^}RTCP_header_SR_report_block;$/;"	t	typeref:struct:_RTCP_header_SR_report_block
RTP_DEFAULT_PORT	rtsp/rtsp_setup.c	6;"	d	file:
RTP_HEADER_SIZE	rtp/rtp.h	20;"	d
RTP_SIZE_MAX	rtp/rtp.h	19;"	d
RTP_header	rtp/rtp.h	/^} RTP_header;$/;"	t	typeref:struct:_RTP_header
RTSPD_VERSION	comm/version.h	7;"	d
RTSP_BUFFERSIZE	rtsp/rtsp.h	35;"	d
RTSP_EL	rtsp/rtsp.h	24;"	d
RTSP_VER	rtsp/rtsp.h	25;"	d
S	rtcp/random32.c	/^static const uint8_t S[4][4] = {$/;"	v	file:
S11	comm/md5c.c	33;"	d	file:
S11	md5c.c	33;"	d	file:
S12	comm/md5c.c	34;"	d	file:
S12	md5c.c	34;"	d	file:
S13	comm/md5c.c	35;"	d	file:
S13	md5c.c	35;"	d	file:
S14	comm/md5c.c	36;"	d	file:
S14	md5c.c	36;"	d	file:
S16	comm/type.h	/^typedef short 					S16;$/;"	t
S20	comm/md5c.c	37;"	d	file:
S20	md5c.c	37;"	d	file:
S21	comm/md5c.c	39;"	d	file:
S21	md5c.c	39;"	d	file:
S22	comm/md5c.c	40;"	d	file:
S22	md5c.c	40;"	d	file:
S23	comm/md5c.c	41;"	d	file:
S23	md5c.c	41;"	d	file:
S24	comm/md5c.c	42;"	d	file:
S24	md5c.c	42;"	d	file:
S31	comm/md5c.c	43;"	d	file:
S31	md5c.c	43;"	d	file:
S32	comm/type.h	/^typedef int						S32;$/;"	t
S33	comm/md5c.c	45;"	d	file:
S33	md5c.c	45;"	d	file:
S34	comm/md5c.c	46;"	d	file:
S34	md5c.c	46;"	d	file:
S41	comm/md5c.c	47;"	d	file:
S41	md5c.c	47;"	d	file:
S42	comm/md5c.c	48;"	d	file:
S42	md5c.c	48;"	d	file:
S43	comm/md5c.c	49;"	d	file:
S43	md5c.c	49;"	d	file:
S44	comm/md5c.c	50;"	d	file:
S44	md5c.c	50;"	d	file:
S64	comm/type.h	/^typedef __int64					S64;$/;"	t
S64	comm/type.h	/^typedef long long 				S64;$/;"	t
S8	comm/type.h	/^typedef signed char 			S8;$/;"	t
SDES	rtcp/rtcp.h	/^	SDES = 202,$/;"	e	enum:__anon1
SDP_EL	rtsp/rtsp.h	30;"	d
SINGLE_NALU_DATA_MAX	rtp/rtp.h	27;"	d
SLICE_FSIZE	rtp/rtp.h	37;"	d
SLICE_NALU_DATA_MAX	rtp/rtp.h	31;"	d
SLICE_SIZE	rtp/rtp.h	36;"	d
SR	rtcp/rtcp.h	/^	SR = 200,$/;"	e	enum:__anon1
STRIP	Makefile	/^STRIP = $(CROSS_COMPILE)strip$/;"	m
SUCCESS	comm/type.h	50;"	d
T	rtcp/random32.c	/^static const uint32_t T[64] = { \/\/ T[i]= fabs(sin(i+1)<<32)$/;"	v	file:
TARGET	Makefile	/^TARGET = edio$/;"	m
TOOL	rtcp/rtcp.h	/^	TOOL,$/;"	e	enum:__anon2
TRUE	comm/type.h	/^	TRUE  = 1,$/;"	e	enum:__anon3
U16	comm/type.h	/^typedef unsigned short 			U16;$/;"	t
U32	comm/type.h	/^typedef unsigned int			U32;$/;"	t
U64	comm/type.h	/^typedef __int64					U64;$/;"	t
U64	comm/type.h	/^typedef unsigned long long 		U64;$/;"	t
U8	comm/type.h	/^typedef unsigned char 			U8;$/;"	t
UCHAR	comm/type.h	/^typedef unsigned char 			UCHAR;$/;"	t
UINT2	comm/global.h	/^typedef U16 UINT2;$/;"	t
UINT4	comm/global.h	/^typedef UL64 UINT4;$/;"	t
UL64	comm/type.h	/^typedef unsigned long			UL64;$/;"	t
VERSION	Makefile	/^VERSION=1.0$/;"	m
VERSION	rtsp/rtsp.h	29;"	d
VOID	comm/type.h	/^typedef void 					VOID;$/;"	t
_RTCP_H	rtcp/rtcp.h	2;"	d
_RTCP_header	rtcp/rtcp.h	/^typedef struct _RTCP_header {$/;"	s
_RTCP_header_BYE	rtcp/rtcp.h	/^typedef struct _RTCP_header_BYE{$/;"	s
_RTCP_header_RR	rtcp/rtcp.h	/^typedef struct _RTCP_header_RR {$/;"	s
_RTCP_header_SDES	rtcp/rtcp.h	/^typedef struct _RTCP_header_SDES {$/;"	s
_RTCP_header_SR	rtcp/rtcp.h	/^typedef struct _RTCP_header_SR {$/;"	s
_RTCP_header_SR_report_block	rtcp/rtcp.h	/^typedef struct _RTCP_header_SR_report_block{$/;"	s
_RTP_H	rtp/rtp.h	2;"	d
_RTP_UDP_H	rtp/udp.h	2;"	d
_RTP_header	rtp/rtp.h	/^typedef struct _RTP_header {$/;"	s
_RTSP_RTSP_H	rtsp/rtsp.h	2;"	d
_RTSP_RTSP_H	rtspd_api.h	2;"	d
_RTSP_SOCKET_H	net/socket.h	2;"	d
_VERSION_H	comm/version.h	2;"	d
__TYPE_H__	comm/type.h	2;"	d
abstr_nalu_indic	rtp/rtp_h264.c	/^S32 abstr_nalu_indic(U8 *buf, S32 buf_size, S32 *be_found)$/;"	f
add_time_stamp	rtsp/rtsp_describe.c	/^VOID add_time_stamp(CHAR *b, S32 crlf)$/;"	f
attr_name	rtcp/rtcp.h	/^	U8 attr_name;$/;"	m	struct:_RTCP_header_SDES
audio_rtcp_fd	rtsp/rtsp.h	/^	S32 audio_rtcp_fd;$/;"	m	struct:rtsp_fd
audio_rtp_fd	rtsp/rtsp.h	/^	S32 audio_rtp_fd;$/;"	m	struct:rtsp_fd
av_md5_final	rtcp/random32.c	/^static VOID av_md5_final(AVMD5 *ctx, uint8_t *dst){$/;"	f	file:
av_md5_init	rtcp/random32.c	/^static VOID av_md5_init(AVMD5 *ctx){$/;"	f	file:
av_md5_sum	rtcp/random32.c	/^static VOID av_md5_sum(uint8_t *dst, const uint8_t *src, const S32 len){$/;"	f	file:
av_md5_update	rtcp/random32.c	/^static VOID av_md5_update(AVMD5 *ctx, const uint8_t *src, const S32 len){$/;"	f	file:
be2me_16	rtcp/random32.c	54;"	d	file:
be2me_16	rtcp/random32.c	61;"	d	file:
be2me_32	rtcp/random32.c	55;"	d	file:
be2me_32	rtcp/random32.c	62;"	d	file:
be2me_64	rtcp/random32.c	56;"	d	file:
be2me_64	rtcp/random32.c	63;"	d	file:
block	rtcp/random32.c	/^    uint8_t  block[64];$/;"	m	struct:AVMD5	file:
body	rtcp/random32.c	/^static VOID body(uint32_t ABCD[4], uint32_t X[16]){$/;"	f	file:
bswap_16	rtcp/random32.c	40;"	d	file:
bswap_32	rtcp/random32.c	43;"	d	file:
bswap_64	rtcp/random32.c	47;"	d	file:
buffer	comm/md5.h	/^  U8 buffer[64];                         \/* input buffer *\/$/;"	m	struct:__anon4
build_rtp_header	rtp/rtp_h264.c	/^S32 build_rtp_header(RTP_header *r, S32 cur_conn_num)$/;"	f
build_rtp_nalu	rtp/rtp_h264.c	/^S32 build_rtp_nalu(U8 *inbuffer, S32 frame_size, S32 cur_conn_num)$/;"	f
check_rtsp_filename	rtsp/rtsp_comm_fun.c	/^S32 check_rtsp_filename(S32 cur_conn_num)$/;"	f
check_rtsp_url	rtsp/rtsp_comm_fun.c	/^S32 check_rtsp_url(S32 cur_conn_num)$/;"	f
cli_fd	rtsp/rtsp.h	/^	S32 cli_fd;$/;"	m	struct:rtsp_cli
cli_host	rtsp/rtsp.h	/^	CHAR cli_host[128];$/;"	m	struct:rtsp_cli
cli_rtsp	rtsp/rtsp.h	/^	struct rtsp_cli cli_rtsp;$/;"	m	struct:rtsp_buffer	typeref:struct:rtsp_buffer::rtsp_cli
close_rtsp_fd	net/socket.c	/^S32 close_rtsp_fd()$/;"	f
cmd_port	rtsp/rtsp.h	/^	struct rtsp_port cmd_port;$/;"	m	struct:rtsp_buffer	typeref:struct:rtsp_buffer::rtsp_port
comm	rtcp/rtcp.h	/^	RTCP_header comm;$/;"	m	struct:rtcp_pkt
conn_num	rtsp/rtsp.h	/^	S32 conn_num;$/;"	m	struct:rtsp_cli
conn_status	rtsp/rtsp.h	/^	U32 conn_status;	$/;"	m	struct:rtsp_buffer
convert_iver_2str	comm/version.c	/^S32 convert_iver_2str(CHAR *sver)$/;"	f
count	comm/md5.h	/^  UL64 count[2];        \/* number of bits, modulo 2^64 (lsb first) *\/$/;"	m	struct:__anon4
count	rtcp/rtcp.h	/^		U32 count:5;    \/\/SC oppure RC$/;"	m	struct:_RTCP_header
create_sercmd_socket	net/socket.c	/^S32 create_sercmd_socket(const CHAR *host, const CHAR *port, S32 type)$/;"	f
create_vrtcp_socket	rtp/udp.c	/^S32 create_vrtcp_socket(const CHAR *host, S32 port, S32 type, S32 cur_conn_num)$/;"	f
create_vrtp_socket	rtp/udp.c	/^S32 create_vrtp_socket(const CHAR* host, S32 port, S32 type, S32 cur_conn_num)$/;"	f
csrc_len	rtp/rtp.h	/^		U8 csrc_len:4;$/;"	m	struct:_RTP_header
cur_conn	rtsp/rtsp.h	/^	U32 cur_conn;$/;"	m	struct:rtsp_buffer
delay_last_SR	rtcp/rtcp.h	/^	U32 delay_last_SR;$/;"	m	struct:_RTCP_header_SR_report_block
dir_nfs	Makefile	/^dir_nfs=\/usr\/gk$/;"	m
extension	rtp/rtp.h	/^		U8 extension:1;$/;"	m	struct:_RTP_header
fd	rtsp/rtsp.h	/^	struct rtsp_fd fd;$/;"	m	struct:rtsp_buffer	typeref:struct:rtsp_buffer::rtsp_fd
file_name	rtsp/rtsp.h	/^	CHAR file_name[128];$/;"	m	struct:rtsp_buffer
fract_lost	rtcp/rtcp.h	/^	U8 fract_lost;$/;"	m	struct:_RTCP_header_SR_report_block
frame_rate_step	rtsp/rtsp.h	/^	U32 frame_rate_step;$/;"	m	struct:rtsp_port
free_memory	net/socket.c	/^S32 free_memory()$/;"	f
get_SDP_session_id	rtsp/rtsp_describe.c	/^ CHAR *get_SDP_session_id(CHAR *buffer)$/;"	f
get_SDP_user_name	rtsp/rtsp_describe.c	/^ CHAR *get_SDP_user_name(CHAR *buffer)$/;"	f
get_SDP_version	rtsp/rtsp_describe.c	/^ CHAR *get_SDP_version(CHAR *buffer)$/;"	f
get_address	rtsp/rtsp_describe.c	/^ CHAR *get_address()$/;"	f
get_describe_sdp	rtsp/rtsp_describe.c	/^S32 get_describe_sdp(CHAR *sdp_buff, S32 cur_conn_num)$/;"	f
get_file_size	rtp/rtp_h264.c	/^L64 get_file_size(FILE *infile)$/;"	f
get_free_conn_status	net/socket.c	/^S32 get_free_conn_status()$/;"	f
get_hostname	rtsp/rtsp_describe.c	/^CHAR *get_hostname()$/;"	f
get_randdom_seq	rtp/rtp_h264.c	/^UL64 get_randdom_seq(VOID)$/;"	f
get_random_seq	rtp/rtp_h264.c	/^UL64 get_random_seq(VOID)$/;"	f
get_random_timestamp	rtp/rtp_h264.c	/^UL64 get_random_timestamp(VOID)$/;"	f
get_rtsp_cseg	rtsp/rtsp_comm_fun.c	/^S32 get_rtsp_cseg(S32 cur_conn_num)$/;"	f
get_rtsp_method	rtsp/rtsp_status.c	/^S32 get_rtsp_method(S32 cur_conn_num)$/;"	f
get_ser_ip	comm/parese_conf.c	/^S32 get_ser_ip(CHAR *buffer)$/;"	f
get_ser_port	comm/parese_conf.c	/^S32 get_ser_port(CHAR *buffer)$/;"	f
get_server_port	rtsp/rtsp_setup.c	/^S32 get_server_port(S32 cur_conn_num)$/;"	f
get_sessionid	rtsp/rtsp_setup.c	/^S32 get_sessionid(S32 cur_conn_num)$/;"	f
get_stat	rtsp/rtsp_status.c	/^CHAR *get_stat(S32 err)$/;"	f
get_sys_value	comm/parese_conf.c	/^S32 get_sys_value(CHAR *buffer)$/;"	f
get_timestamp	rtp/rtp_h264.c	/^L64 get_timestamp()$/;"	f
get_um_state	comm/parese_conf.c	/^S32 get_um_state(CHAR *buffer)$/;"	f
get_vist_file	comm/parese_conf.c	/^S32 get_vist_file(CHAR *buffer)$/;"	f
getrtspd_version	rtspd.c	/^S32 getrtspd_version(CHAR *version)$/;"	f
h_seq_no	rtcp/rtcp.h	/^	U32 h_seq_no;$/;"	m	struct:_RTCP_header_SR_report_block
host_name	rtsp/rtsp.h	/^	CHAR host_name[128];$/;"	m	struct:rtsp_buffer
in_buffer	rtsp/rtsp.h	/^	CHAR in_buffer[RTSP_BUFFERSIZE];$/;"	m	struct:rtsp_buffer
init_memory	net/socket.c	/^S32 init_memory()$/;"	f
is_runing	rtsp/rtsp.h	/^	U32 is_runing;$/;"	m	struct:rtsp_buffer
is_supported_mediatype	rtsp/rtsp_describe.c	/^S32 is_supported_mediatype(CHAR *p, S32 cur_conn_num)$/;"	f
jitter	rtcp/rtcp.h	/^	U32 jitter;$/;"	m	struct:_RTCP_header_SR_report_block
last_SR	rtcp/rtcp.h	/^	U32 last_SR;$/;"	m	struct:_RTCP_header_SR_report_block
le2me_16	rtcp/random32.c	57;"	d	file:
le2me_16	rtcp/random32.c	64;"	d	file:
le2me_32	rtcp/random32.c	58;"	d	file:
le2me_32	rtcp/random32.c	65;"	d	file:
le2me_64	rtcp/random32.c	59;"	d	file:
le2me_64	rtcp/random32.c	66;"	d	file:
len	rtcp/random32.c	/^    uint64_t len;$/;"	m	struct:AVMD5	file:
len	rtcp/rtcp.h	/^	U8 len;$/;"	m	struct:_RTCP_header_SDES
length	rtcp/rtcp.h	/^	U32 length:16;$/;"	m	struct:_RTCP_header
length	rtcp/rtcp.h	/^	U8 length;$/;"	m	struct:_RTCP_header_BYE
main	rtspd.c	/^S32 main()$/;"	f
marker	rtp/rtp.h	/^		U8 marker:1; $/;"	m	struct:_RTP_header
marker	rtp/rtp.h	/^		U8 marker:1;$/;"	m	struct:_RTP_header
md_32	rtcp/random32.c	/^static uint32_t md_32(CHAR *string, S32 length)$/;"	f	file:
md_32	rtsp/rtsp_setup.c	/^static U32 md_32(CHAR *string, S32 length)$/;"	f	file:
my_strlen	rtp/rtp_h264.c	/^S32 my_strlen(const CHAR *str)$/;"	f
nalu_buffer	rtsp/rtsp.h	/^	U8 nalu_buffer[1448];$/;"	m	struct:rtsp_buffer
name	rtcp/rtcp.h	/^	CHAR name[];$/;"	m	struct:_RTCP_header_SDES
ntp_timestampH	rtcp/rtcp.h	/^	U32 ntp_timestampH;$/;"	m	struct:_RTCP_header_SR
ntp_timestampL	rtcp/rtcp.h	/^	U32 ntp_timestampL;$/;"	m	struct:_RTCP_header_SR
octet_count	rtcp/rtcp.h	/^	U32 octet_count;$/;"	m	struct:_RTCP_header_SR
out_buffer	rtsp/rtsp.h	/^	CHAR out_buffer[RTSP_BUFFERSIZE];	$/;"	m	struct:rtsp_buffer
padding	rtcp/rtcp.h	/^		U32 padding:1;$/;"	m	struct:_RTCP_header
padding	rtp/rtp.h	/^		U8 padding:1;$/;"	m	struct:_RTP_header
parse_sys_conf	comm/parese_conf.c	/^S32 parse_sys_conf(CHAR *szFileName)$/;"	f
parse_url	rtsp/rtsp_describe.c	/^S32 parse_url(const CHAR *url, CHAR *server, U16 *port, CHAR *file_name)$/;"	f
payload	rtp/rtp.h	/^		U8 payload:7;		$/;"	m	struct:_RTP_header
payload	rtp/rtp.h	/^		U8 payload:7;$/;"	m	struct:_RTP_header
payload_type	rtsp/rtsp.h	/^	S32 payload_type; \/* 96 h263\/h264*\/$/;"	m	struct:rtsp_buffer
pck_lost	rtcp/rtcp.h	/^	U8 pck_lost[3];$/;"	m	struct:_RTCP_header_SR_report_block
pkt_count	rtcp/rtcp.h	/^	U32 pkt_count;$/;"	m	struct:_RTCP_header_SR
proc_rtcp	rtp/udp.c	/^S32 proc_rtcp(S32 cur_conn_num)$/;"	f
proc_rtp	rtp/udp.c	/^S32 proc_rtp(S32 cur_conn_num)$/;"	f
proc_rtspd	rtspd.c	/^S32 proc_rtspd(CHAR *rtsp_ip, S32 rtsp_port)$/;"	f
pt	rtcp/rtcp.h	/^	U32 pt:8;$/;"	m	struct:_RTCP_header
pth	rtsp/rtsp.h	/^	struct rtsp_th pth;$/;"	m	struct:rtsp_buffer	typeref:struct:rtsp_buffer::rtsp_th
random32	rtcp/random32.c	/^U32 random32(S32 type)$/;"	f
random32	rtcp/random32.c	/^uint32_t random32(S32 type)$/;"	f
rtcp_cli_port	rtsp/rtsp.h	/^	S32 rtcp_cli_port;$/;"	m	struct:rtsp_port
rtcp_free	rtspd.c	/^S32 rtcp_free(S32 free_chn)$/;"	f
rtcp_info	rtcp/rtcp.h	/^} rtcp_info;$/;"	t	typeref:enum:__anon2
rtcp_init	rtspd.c	/^S32 rtcp_init(S32 free_chn)$/;"	f
rtcp_pkt	rtcp/rtcp.h	/^struct rtcp_pkt{$/;"	s
rtcp_pkt	rtcp/rtcp.h	/^}rtcp_pkt;$/;"	v	typeref:struct:rtcp_pkt
rtcp_pkt_type	rtcp/rtcp.h	/^}rtcp_pkt_type;$/;"	t	typeref:enum:__anon1
rtcp_send_packet	rtcp/rtcp.c	/^S32 rtcp_send_packet(struct rtcp_pkt *pkt)$/;"	f
rtcp_ser_port	rtsp/rtsp.h	/^	S32 rtcp_ser_port;$/;"	m	struct:rtsp_port
rtcp_vthread	rtsp/rtsp.h	/^	pthread_t rtcp_vthread;$/;"	m	struct:rtsp_th
rtp_cli_port	rtsp/rtsp.h	/^	S32 rtp_cli_port;$/;"	m	struct:rtsp_port
rtp_free	rtspd.c	/^S32 rtp_free(S32 free_chn)$/;"	f
rtp_init	rtspd.c	/^S32 rtp_init(S32 free_chn)$/;"	f
rtp_send_from_file	rtp/rtp_h264.c	/^S32 rtp_send_from_file(S32 cur_conn_num)$/;"	f
rtp_send_from_stream	rtp/rtp_h264.c	/^S32 rtp_send_from_stream()$/;"	f
rtp_send_packet	rtp/rtp_h264.c	/^S32 rtp_send_packet(S32 cur_conn_num)$/;"	f
rtp_ser_port	rtsp/rtsp.h	/^	S32 rtp_ser_port;$/;"	m	struct:rtsp_port
rtp_svpactet	rtspd.c	/^S32 rtp_svpactet(U8 *buff, S32 framesize, S32 free_chn)$/;"	f
rtp_timestamp	rtcp/rtcp.h	/^	U32 rtp_timestamp;$/;"	m	struct:_RTCP_header_SR
rtp_vthread	rtsp/rtsp.h	/^	pthread_t rtp_vthread;$/;"	m	struct:rtsp_th
rtrun_cate	comm/parese_conf.c	/^VOID rtrun_cate(CHAR *pString, CHAR *szFill)$/;"	f
rtsp	rtsp/rtsp_comm_fun.c	/^struct rtsp_buffer *rtsp[MAX_CONN];$/;"	v	typeref:struct:rtsp_buffer
rtsp_buffer	rtsp/rtsp.h	/^struct rtsp_buffer {$/;"	s
rtsp_cli	rtsp/rtsp.h	/^struct rtsp_cli{$/;"	s
rtsp_cmd_match	net/socket.c	/^S32 rtsp_cmd_match(S32 method, S32 cur_conn_num)$/;"	f
rtsp_cseq	rtsp/rtsp.h	/^	U32 rtsp_cseq;$/;"	m	struct:rtsp_buffer
rtsp_deport	rtsp/rtsp.h	/^	U32 rtsp_deport;$/;"	m	struct:rtsp_buffer
rtsp_describe	rtsp/rtsp_describe.c	/^S32 rtsp_describe(S32 cur_conn_num)$/;"	f
rtsp_fd	rtsp/rtsp.h	/^struct rtsp_fd{$/;"	s
rtsp_free	rtspd.c	/^S32 rtsp_free()$/;"	f
rtsp_freeall	rtspd.c	/^S32 rtsp_freeall()$/;"	f
rtsp_init	rtspd.c	/^S32 rtsp_init(CHAR *rtsp_ip, S32 rtsp_port)$/;"	f
rtsp_options	rtsp/rtsp_options.c	/^S32 rtsp_options(S32 cur_conn_num)$/;"	f
rtsp_play	rtsp/rtsp_play.c	/^S32 rtsp_play(S32 cur_conn_num)$/;"	f
rtsp_port	rtsp/rtsp.h	/^struct rtsp_port{$/;"	s
rtsp_proc	rtspd.c	/^S32 rtsp_proc(S32 free_chn)$/;"	f
rtsp_setup	rtsp/rtsp_setup.c	/^S32 rtsp_setup(S32 cur_conn_num)$/;"	f
rtsp_terardown	rtsp/rtsp_teardown.c	/^S32 rtsp_terardown(S32 cur_conn_num)$/;"	f
rtsp_th	rtsp/rtsp.h	/^struct rtsp_th{$/;"	s
rtsp_um_stat	rtsp/rtsp.h	/^	U32 rtsp_um_stat;  \/**** 0 is Unicast   1 is multicast  ****\/$/;"	m	struct:rtsp_buffer
rtsp_vthread	rtsp/rtsp.h	/^	pthread_t rtsp_vthread;	$/;"	m	struct:rtsp_th
rtsp_vthread1	rtsp/rtsp.h	/^	pthread_t rtsp_vthread1;$/;"	m	struct:rtsp_th
rtspd_accept_lock	rtspd.c	/^sem_t rtspd_accept_lock;$/;"	v
rtspd_chn_quit	rtspd.c	/^S32 rtspd_chn_quit(S32 free_chn)$/;"	f
rtspd_cond	rtspd.c	/^pthread_cond_t rtspd_cond;$/;"	v
rtspd_free	rtspd.c	/^S32 rtspd_free()$/;"	f
rtspd_freechn	rtspd.c	/^S32 rtspd_freechn()$/;"	f
rtspd_init	rtspd.c	/^S32 rtspd_init()$/;"	f
rtspd_lock	rtspd.c	/^sem_t rtspd_lock[MAX_CONN];$/;"	v
rtspd_mutex	rtspd.c	/^pthread_mutex_t rtspd_mutex;$/;"	v
rtspd_semop	rtspd.c	/^sem_t rtspd_semop;$/;"	v
rtspd_status	rtsp/rtsp.h	/^	U32 rtspd_status;$/;"	m	struct:rtsp_buffer
rtspd_status	rtspd.c	/^S32 rtspd_status(S32 free_chn)$/;"	f
rtspd_vtype	rtspd.c	/^S32 rtspd_vtype(S32 free_chn)$/;"	f
rtspfd	rtsp/rtsp.h	/^	S32 rtspfd;$/;"	m	struct:rtsp_fd
sdec	rtcp/rtcp.h	/^	RTCP_header_SDES sdec;$/;"	m	struct:rtcp_pkt
sdp_buffer	rtsp/rtsp.h	/^	CHAR sdp_buffer[MAX_DESCR_LENGTH];$/;"	m	struct:rtsp_buffer
send_describe_reply	rtsp/rtsp_describe.c	/^S32 send_describe_reply(S32 status, S32 cur_conn_num)$/;"	f
send_file	rtspd.c	/^S32 send_file(S32 free_chn)$/;"	f
send_play_reply	rtsp/rtsp_play.c	/^S32 send_play_reply(S32 status,S32 cur_conn_num)$/;"	f
send_reply	rtsp/rtsp_status.c	/^S32 send_reply(S32 errornumber, S32 cur_conn_num)$/;"	f
send_setup_reply	rtsp/rtsp_setup.c	/^S32 send_setup_reply(S32 status, S32 cur_conn_num)$/;"	f
send_terardown_reply	rtsp/rtsp_teardown.c	/^S32 send_terardown_reply(S32 status, S32 cur_conn_num)$/;"	f
seq	rtsp/rtsp.h	/^	U16 seq;$/;"	m	struct:rtsp_port
seq_no	rtp/rtp.h	/^	U16 seq_no;$/;"	m	struct:_RTP_header
session_id	rtsp/rtsp.h	/^	S32 session_id;$/;"	m	struct:rtsp_buffer
set_framerate	rtspd.c	/^S32 set_framerate(S32 f_rate, S32 free_chn)$/;"	f
set_free_conn_status	net/socket.c	/^S32 set_free_conn_status(S32 cur_conn, S32 cur_status)$/;"	f
set_option_reply	rtsp/rtsp_options.c	/^S32 set_option_reply(S32 status, S32 cur_conn_num)$/;"	f
sig_exit	rtspd.c	/^VOID sig_exit(VOID)$/;"	f
ssrc	rtcp/rtcp.h	/^	U32 ssrc;$/;"	m	struct:_RTCP_header_BYE
ssrc	rtcp/rtcp.h	/^	U32 ssrc;$/;"	m	struct:_RTCP_header_RR
ssrc	rtcp/rtcp.h	/^	U32 ssrc;$/;"	m	struct:_RTCP_header_SDES
ssrc	rtcp/rtcp.h	/^	U32 ssrc;$/;"	m	struct:_RTCP_header_SR
ssrc	rtcp/rtcp.h	/^	UL64 ssrc;$/;"	m	struct:_RTCP_header_SR_report_block
ssrc	rtp/rtp.h	/^	U32 ssrc;					\/* stream number is used here. *\/$/;"	m	struct:_RTP_header
ssrc	rtsp/rtsp.h	/^	U32 ssrc;$/;"	m	struct:rtsp_port
start_port	rtsp/rtsp_setup.c	/^S32 start_port = RTP_DEFAULT_PORT;$/;"	v
state	comm/md5.h	/^  UL64 state[4];                                   \/* state (ABCD) *\/$/;"	m	struct:__anon4
tcp_accept	net/socket.c	/^S32 tcp_accept()$/;"	f
tcp_read	net/socket.c	/^S32 tcp_read(S32 fd, void  *buf, S32 length)$/;"	f
tcp_write	net/socket.c	/^S32 tcp_write(S32 fd, void *buf, S32 length)$/;"	f
timestamp	rtp/rtp.h	/^	U32 timestamp;$/;"	m	struct:_RTP_header
timestamp	rtsp/rtsp.h	/^	U32 timestamp;$/;"	m	struct:rtsp_port
udp_write	rtp/rtp_h264.c	/^S32 udp_write(S32 len, S32 cur_conn_num)$/;"	f
udp_write_fua	rtp/rtp_h264.c	/^S32 udp_write_fua(S32 len, S32 time, S32 cur_conn_num)$/;"	f
vd_rtcp_func	rtp/udp.c	/^VOID *vd_rtcp_func(VOID *arg)$/;"	f
vd_rtp_func	rtp/udp.c	/^VOID *vd_rtp_func(VOID *arg)$/;"	f
vd_rtsp_proc	net/socket.c	/^void *vd_rtsp_proc(void *arg)$/;"	f
vd_rtsp_procin	net/socket.c	/^VOID *vd_rtsp_procin(VOID *arg)$/;"	f
version	rtcp/rtcp.h	/^		U32 version:2;$/;"	m	struct:_RTCP_header
version	rtp/rtp.h	/^		U8 version:2;$/;"	m	struct:_RTP_header
video_rtcp_fd	rtsp/rtsp.h	/^	S32 video_rtcp_fd;$/;"	m	struct:rtsp_fd
video_rtp_fd	rtsp/rtsp.h	/^	S32 video_rtp_fd;$/;"	m	struct:rtsp_fd
vist_type	rtsp/rtsp.h	/^	U32 vist_type;  \/****0: H264 file vist  1: PS file vist  2: h264 stream vist ****\/$/;"	m	struct:rtsp_buffer
wirte_to_file	rtp/rtp_h264.c	/^S32 wirte_to_file(U8 *buf, S32 buffer_size, FILE *outfile)$/;"	f
write_n	rtp/rtp_h264.c	/^ssize_t write_n(S32 fd, const VOID *vptr, size_t n )$/;"	f
